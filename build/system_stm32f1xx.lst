ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32f1xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemInit
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	SystemInit:
  26              	.LFB65:
  27              		.file 1 "Core/Src/system_stm32f1xx.c"
   1:Core/Src/system_stm32f1xx.c **** /**
   2:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32f1xx.c ****   * @file    system_stm32f1xx.c
   4:Core/Src/system_stm32f1xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32f1xx.c ****   * @version V4.2.0
   6:Core/Src/system_stm32f1xx.c ****   * @date    31-March-2017
   7:Core/Src/system_stm32f1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:Core/Src/system_stm32f1xx.c ****   * 
   9:Core/Src/system_stm32f1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:Core/Src/system_stm32f1xx.c ****   *     user application:
  11:Core/Src/system_stm32f1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:Core/Src/system_stm32f1xx.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:Core/Src/system_stm32f1xx.c ****   *                      This function is called at startup just after reset and 
  14:Core/Src/system_stm32f1xx.c ****   *                      before branch to main program. This call is made inside
  15:Core/Src/system_stm32f1xx.c ****   *                      the "startup_stm32f1xx_xx.s" file.
  16:Core/Src/system_stm32f1xx.c ****   *
  17:Core/Src/system_stm32f1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:Core/Src/system_stm32f1xx.c ****   *                                  by the user application to setup the SysTick 
  19:Core/Src/system_stm32f1xx.c ****   *                                  timer or configure other parameters.
  20:Core/Src/system_stm32f1xx.c ****   *                                     
  21:Core/Src/system_stm32f1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:Core/Src/system_stm32f1xx.c ****   *                                 be called whenever the core clock is changed
  23:Core/Src/system_stm32f1xx.c ****   *                                 during program execution.
  24:Core/Src/system_stm32f1xx.c ****   *
  25:Core/Src/system_stm32f1xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:Core/Src/system_stm32f1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f1xx_xx.s" file, to
  27:Core/Src/system_stm32f1xx.c ****   *    configure the system clock before to branch to main program.
  28:Core/Src/system_stm32f1xx.c ****   *
  29:Core/Src/system_stm32f1xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depending on
  30:Core/Src/system_stm32f1xx.c ****   *    the product used), refer to "HSE_VALUE". 
  31:Core/Src/system_stm32f1xx.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 2


  32:Core/Src/system_stm32f1xx.c ****   *    are using different crystal you have to adapt the HSE value to your own
  33:Core/Src/system_stm32f1xx.c ****   *    configuration.
  34:Core/Src/system_stm32f1xx.c ****   *        
  35:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
  36:Core/Src/system_stm32f1xx.c ****   * @attention
  37:Core/Src/system_stm32f1xx.c ****   *
  38:Core/Src/system_stm32f1xx.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  39:Core/Src/system_stm32f1xx.c ****   *
  40:Core/Src/system_stm32f1xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  41:Core/Src/system_stm32f1xx.c ****   * are permitted provided that the following conditions are met:
  42:Core/Src/system_stm32f1xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  43:Core/Src/system_stm32f1xx.c ****   *      this list of conditions and the following disclaimer.
  44:Core/Src/system_stm32f1xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  45:Core/Src/system_stm32f1xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  46:Core/Src/system_stm32f1xx.c ****   *      and/or other materials provided with the distribution.
  47:Core/Src/system_stm32f1xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  48:Core/Src/system_stm32f1xx.c ****   *      may be used to endorse or promote products derived from this software
  49:Core/Src/system_stm32f1xx.c ****   *      without specific prior written permission.
  50:Core/Src/system_stm32f1xx.c ****   *
  51:Core/Src/system_stm32f1xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  52:Core/Src/system_stm32f1xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  53:Core/Src/system_stm32f1xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  54:Core/Src/system_stm32f1xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  55:Core/Src/system_stm32f1xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  56:Core/Src/system_stm32f1xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  57:Core/Src/system_stm32f1xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  58:Core/Src/system_stm32f1xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  59:Core/Src/system_stm32f1xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  60:Core/Src/system_stm32f1xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  61:Core/Src/system_stm32f1xx.c ****   *
  62:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
  63:Core/Src/system_stm32f1xx.c ****   */
  64:Core/Src/system_stm32f1xx.c **** 
  65:Core/Src/system_stm32f1xx.c **** /** @addtogroup CMSIS
  66:Core/Src/system_stm32f1xx.c ****   * @{
  67:Core/Src/system_stm32f1xx.c ****   */
  68:Core/Src/system_stm32f1xx.c **** 
  69:Core/Src/system_stm32f1xx.c **** /** @addtogroup stm32f1xx_system
  70:Core/Src/system_stm32f1xx.c ****   * @{
  71:Core/Src/system_stm32f1xx.c ****   */  
  72:Core/Src/system_stm32f1xx.c ****   
  73:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Includes
  74:Core/Src/system_stm32f1xx.c ****   * @{
  75:Core/Src/system_stm32f1xx.c ****   */
  76:Core/Src/system_stm32f1xx.c **** 
  77:Core/Src/system_stm32f1xx.c **** #include "stm32f1xx.h"
  78:Core/Src/system_stm32f1xx.c **** 
  79:Core/Src/system_stm32f1xx.c **** /**
  80:Core/Src/system_stm32f1xx.c ****   * @}
  81:Core/Src/system_stm32f1xx.c ****   */
  82:Core/Src/system_stm32f1xx.c **** 
  83:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_TypesDefinitions
  84:Core/Src/system_stm32f1xx.c ****   * @{
  85:Core/Src/system_stm32f1xx.c ****   */
  86:Core/Src/system_stm32f1xx.c **** 
  87:Core/Src/system_stm32f1xx.c **** /**
  88:Core/Src/system_stm32f1xx.c ****   * @}
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 3


  89:Core/Src/system_stm32f1xx.c ****   */
  90:Core/Src/system_stm32f1xx.c **** 
  91:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Defines
  92:Core/Src/system_stm32f1xx.c ****   * @{
  93:Core/Src/system_stm32f1xx.c ****   */
  94:Core/Src/system_stm32f1xx.c **** 
  95:Core/Src/system_stm32f1xx.c **** #if !defined  (HSE_VALUE) 
  96:Core/Src/system_stm32f1xx.c ****   #define HSE_VALUE               8000000U /*!< Default value of the External oscillator in Hz.
  97:Core/Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  98:Core/Src/system_stm32f1xx.c **** #endif /* HSE_VALUE */
  99:Core/Src/system_stm32f1xx.c **** 
 100:Core/Src/system_stm32f1xx.c **** #if !defined  (HSI_VALUE)
 101:Core/Src/system_stm32f1xx.c ****   #define HSI_VALUE               8000000U /*!< Default value of the Internal oscillator in Hz.
 102:Core/Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
 103:Core/Src/system_stm32f1xx.c **** #endif /* HSI_VALUE */
 104:Core/Src/system_stm32f1xx.c **** 
 105:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to use external SRAM  */ 
 106:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 107:Core/Src/system_stm32f1xx.c **** /* #define DATA_IN_ExtSRAM */
 108:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 109:Core/Src/system_stm32f1xx.c **** 
 110:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 111:Core/Src/system_stm32f1xx.c ****      Internal SRAM. */ 
 112:Core/Src/system_stm32f1xx.c **** /* #define VECT_TAB_SRAM */
 113:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET  0x00000000U /*!< Vector Table base offset field. 
 114:Core/Src/system_stm32f1xx.c ****                                   This value must be a multiple of 0x200. */
 115:Core/Src/system_stm32f1xx.c **** 
 116:Core/Src/system_stm32f1xx.c **** 
 117:Core/Src/system_stm32f1xx.c **** /**
 118:Core/Src/system_stm32f1xx.c ****   * @}
 119:Core/Src/system_stm32f1xx.c ****   */
 120:Core/Src/system_stm32f1xx.c **** 
 121:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Macros
 122:Core/Src/system_stm32f1xx.c ****   * @{
 123:Core/Src/system_stm32f1xx.c ****   */
 124:Core/Src/system_stm32f1xx.c **** 
 125:Core/Src/system_stm32f1xx.c **** /**
 126:Core/Src/system_stm32f1xx.c ****   * @}
 127:Core/Src/system_stm32f1xx.c ****   */
 128:Core/Src/system_stm32f1xx.c **** 
 129:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Variables
 130:Core/Src/system_stm32f1xx.c ****   * @{
 131:Core/Src/system_stm32f1xx.c ****   */
 132:Core/Src/system_stm32f1xx.c **** 
 133:Core/Src/system_stm32f1xx.c **** /*******************************************************************************
 134:Core/Src/system_stm32f1xx.c **** *  Clock Definitions
 135:Core/Src/system_stm32f1xx.c **** *******************************************************************************/
 136:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xB) ||defined(STM32F100xE)
 137:Core/Src/system_stm32f1xx.c ****   uint32_t SystemCoreClock         = 24000000U;        /*!< System Clock Frequency (Core Clock) */
 138:Core/Src/system_stm32f1xx.c **** #else /*!< HSI Selected as System Clock source */
 139:Core/Src/system_stm32f1xx.c ****   uint32_t SystemCoreClock         = 72000000U;        /*!< System Clock Frequency (Core Clock) */
 140:Core/Src/system_stm32f1xx.c **** #endif
 141:Core/Src/system_stm32f1xx.c **** 
 142:Core/Src/system_stm32f1xx.c **** const uint8_t AHBPrescTable[16U] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 143:Core/Src/system_stm32f1xx.c **** const uint8_t APBPrescTable[8U] =  {0, 0, 0, 0, 1, 2, 3, 4};
 144:Core/Src/system_stm32f1xx.c **** 
 145:Core/Src/system_stm32f1xx.c **** /**
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 4


 146:Core/Src/system_stm32f1xx.c ****   * @}
 147:Core/Src/system_stm32f1xx.c ****   */
 148:Core/Src/system_stm32f1xx.c **** 
 149:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_FunctionPrototypes
 150:Core/Src/system_stm32f1xx.c ****   * @{
 151:Core/Src/system_stm32f1xx.c ****   */
 152:Core/Src/system_stm32f1xx.c **** 
 153:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 154:Core/Src/system_stm32f1xx.c **** #ifdef DATA_IN_ExtSRAM
 155:Core/Src/system_stm32f1xx.c ****   static void SystemInit_ExtMemCtl(void); 
 156:Core/Src/system_stm32f1xx.c **** #endif /* DATA_IN_ExtSRAM */
 157:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 158:Core/Src/system_stm32f1xx.c **** 
 159:Core/Src/system_stm32f1xx.c **** /**
 160:Core/Src/system_stm32f1xx.c ****   * @}
 161:Core/Src/system_stm32f1xx.c ****   */
 162:Core/Src/system_stm32f1xx.c **** 
 163:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Functions
 164:Core/Src/system_stm32f1xx.c ****   * @{
 165:Core/Src/system_stm32f1xx.c ****   */
 166:Core/Src/system_stm32f1xx.c **** 
 167:Core/Src/system_stm32f1xx.c **** /**
 168:Core/Src/system_stm32f1xx.c ****   * @brief  Setup the microcontroller system
 169:Core/Src/system_stm32f1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 170:Core/Src/system_stm32f1xx.c ****   *         SystemCoreClock variable.
 171:Core/Src/system_stm32f1xx.c ****   * @note   This function should be used only after reset.
 172:Core/Src/system_stm32f1xx.c ****   * @param  None
 173:Core/Src/system_stm32f1xx.c ****   * @retval None
 174:Core/Src/system_stm32f1xx.c ****   */
 175:Core/Src/system_stm32f1xx.c **** void SystemInit (void)
 176:Core/Src/system_stm32f1xx.c **** {
  28              		.loc 1 176 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 177:Core/Src/system_stm32f1xx.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 178:Core/Src/system_stm32f1xx.c ****   /* Set HSION bit */
 179:Core/Src/system_stm32f1xx.c ****   RCC->CR |= 0x00000001U;
  33              		.loc 1 179 3 view .LVU1
 176:Core/Src/system_stm32f1xx.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  34              		.loc 1 176 1 is_stmt 0 view .LVU2
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
 180:Core/Src/system_stm32f1xx.c **** 
 181:Core/Src/system_stm32f1xx.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 182:Core/Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)
 183:Core/Src/system_stm32f1xx.c ****   RCC->CFGR &= 0xF8FF0000U;
 184:Core/Src/system_stm32f1xx.c **** #else
 185:Core/Src/system_stm32f1xx.c ****   RCC->CFGR &= 0xF0FF0000U;
 186:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */   
 187:Core/Src/system_stm32f1xx.c ****   
 188:Core/Src/system_stm32f1xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 189:Core/Src/system_stm32f1xx.c ****   RCC->CR &= 0xFEF6FFFFU;
 190:Core/Src/system_stm32f1xx.c **** 
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 5


 191:Core/Src/system_stm32f1xx.c ****   /* Reset HSEBYP bit */
 192:Core/Src/system_stm32f1xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 193:Core/Src/system_stm32f1xx.c **** 
 194:Core/Src/system_stm32f1xx.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 195:Core/Src/system_stm32f1xx.c ****   RCC->CFGR &= 0xFF80FFFFU;
 196:Core/Src/system_stm32f1xx.c **** 
 197:Core/Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 198:Core/Src/system_stm32f1xx.c ****   /* Reset PLL2ON and PLL3ON bits */
 199:Core/Src/system_stm32f1xx.c ****   RCC->CR &= 0xEBFFFFFFU;
 200:Core/Src/system_stm32f1xx.c **** 
 201:Core/Src/system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 202:Core/Src/system_stm32f1xx.c ****   RCC->CIR = 0x00FF0000U;
 203:Core/Src/system_stm32f1xx.c **** 
 204:Core/Src/system_stm32f1xx.c ****   /* Reset CFGR2 register */
 205:Core/Src/system_stm32f1xx.c ****   RCC->CFGR2 = 0x00000000U;
 206:Core/Src/system_stm32f1xx.c **** #elif defined(STM32F100xB) || defined(STM32F100xE)
 207:Core/Src/system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 208:Core/Src/system_stm32f1xx.c ****   RCC->CIR = 0x009F0000U;
 209:Core/Src/system_stm32f1xx.c **** 
 210:Core/Src/system_stm32f1xx.c ****   /* Reset CFGR2 register */
 211:Core/Src/system_stm32f1xx.c ****   RCC->CFGR2 = 0x00000000U;      
 212:Core/Src/system_stm32f1xx.c **** #else
 213:Core/Src/system_stm32f1xx.c ****   /* Disable all interrupts and clear pending bits  */
 214:Core/Src/system_stm32f1xx.c ****   RCC->CIR = 0x009F0000U;
 215:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 216:Core/Src/system_stm32f1xx.c ****     
 217:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 218:Core/Src/system_stm32f1xx.c ****   #ifdef DATA_IN_ExtSRAM
 219:Core/Src/system_stm32f1xx.c ****     SystemInit_ExtMemCtl(); 
 220:Core/Src/system_stm32f1xx.c ****   #endif /* DATA_IN_ExtSRAM */
 221:Core/Src/system_stm32f1xx.c **** #endif 
 222:Core/Src/system_stm32f1xx.c **** 
 223:Core/Src/system_stm32f1xx.c **** #ifdef VECT_TAB_SRAM
 224:Core/Src/system_stm32f1xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 225:Core/Src/system_stm32f1xx.c **** #else
 226:Core/Src/system_stm32f1xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
  39              		.loc 1 226 13 view .LVU3
  40 0002 4FF00060 		mov	r0, #134217728
 214:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
  41              		.loc 1 214 12 view .LVU4
  42 0006 4FF41F04 		mov	r4, #10420224
 179:Core/Src/system_stm32f1xx.c **** 
  43              		.loc 1 179 11 view .LVU5
  44 000a 0E4B     		ldr	r3, .L4
 183:Core/Src/system_stm32f1xx.c **** #else
  45              		.loc 1 183 13 view .LVU6
  46 000c 0E4A     		ldr	r2, .L4+4
 179:Core/Src/system_stm32f1xx.c **** 
  47              		.loc 1 179 11 view .LVU7
  48 000e 1968     		ldr	r1, [r3]
  49 0010 41F00101 		orr	r1, r1, #1
  50 0014 1960     		str	r1, [r3]
 183:Core/Src/system_stm32f1xx.c **** #else
  51              		.loc 1 183 3 is_stmt 1 view .LVU8
 183:Core/Src/system_stm32f1xx.c **** #else
  52              		.loc 1 183 13 is_stmt 0 view .LVU9
  53 0016 5968     		ldr	r1, [r3, #4]
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 6


  54 0018 0A40     		ands	r2, r2, r1
  55 001a 5A60     		str	r2, [r3, #4]
 189:Core/Src/system_stm32f1xx.c **** 
  56              		.loc 1 189 3 is_stmt 1 view .LVU10
 189:Core/Src/system_stm32f1xx.c **** 
  57              		.loc 1 189 11 is_stmt 0 view .LVU11
  58 001c 1A68     		ldr	r2, [r3]
  59              		.loc 1 226 13 view .LVU12
  60 001e 0B49     		ldr	r1, .L4+8
 189:Core/Src/system_stm32f1xx.c **** 
  61              		.loc 1 189 11 view .LVU13
  62 0020 22F08472 		bic	r2, r2, #17301504
  63 0024 22F48032 		bic	r2, r2, #65536
  64 0028 1A60     		str	r2, [r3]
 192:Core/Src/system_stm32f1xx.c **** 
  65              		.loc 1 192 3 is_stmt 1 view .LVU14
 192:Core/Src/system_stm32f1xx.c **** 
  66              		.loc 1 192 11 is_stmt 0 view .LVU15
  67 002a 1A68     		ldr	r2, [r3]
  68 002c 22F48022 		bic	r2, r2, #262144
  69 0030 1A60     		str	r2, [r3]
 195:Core/Src/system_stm32f1xx.c **** 
  70              		.loc 1 195 3 is_stmt 1 view .LVU16
 195:Core/Src/system_stm32f1xx.c **** 
  71              		.loc 1 195 13 is_stmt 0 view .LVU17
  72 0032 5A68     		ldr	r2, [r3, #4]
  73 0034 22F4FE02 		bic	r2, r2, #8323072
  74 0038 5A60     		str	r2, [r3, #4]
 214:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
  75              		.loc 1 214 3 is_stmt 1 view .LVU18
 214:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
  76              		.loc 1 214 12 is_stmt 0 view .LVU19
  77 003a 9C60     		str	r4, [r3, #8]
  78              		.loc 1 226 3 is_stmt 1 view .LVU20
 227:Core/Src/system_stm32f1xx.c **** #endif 
 228:Core/Src/system_stm32f1xx.c **** }
  79              		.loc 1 228 1 is_stmt 0 view .LVU21
  80 003c 10BC     		pop	{r4}
  81              	.LCFI1:
  82              		.cfi_restore 4
  83              		.cfi_def_cfa_offset 0
 226:Core/Src/system_stm32f1xx.c **** #endif 
  84              		.loc 1 226 13 view .LVU22
  85 003e 8860     		str	r0, [r1, #8]
  86              		.loc 1 228 1 view .LVU23
  87 0040 7047     		bx	lr
  88              	.L5:
  89 0042 00BF     		.align	2
  90              	.L4:
  91 0044 00100240 		.word	1073876992
  92 0048 0000FFF8 		.word	-117506048
  93 004c 00ED00E0 		.word	-536810240
  94              		.cfi_endproc
  95              	.LFE65:
  97              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  98              		.align	1
  99              		.p2align 2,,3
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 7


 100              		.global	SystemCoreClockUpdate
 101              		.syntax unified
 102              		.thumb
 103              		.thumb_func
 105              	SystemCoreClockUpdate:
 106              	.LFB66:
 229:Core/Src/system_stm32f1xx.c **** 
 230:Core/Src/system_stm32f1xx.c **** /**
 231:Core/Src/system_stm32f1xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 232:Core/Src/system_stm32f1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 233:Core/Src/system_stm32f1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 234:Core/Src/system_stm32f1xx.c ****   *         other parameters.
 235:Core/Src/system_stm32f1xx.c ****   *           
 236:Core/Src/system_stm32f1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 237:Core/Src/system_stm32f1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 238:Core/Src/system_stm32f1xx.c ****   *         based on this variable will be incorrect.         
 239:Core/Src/system_stm32f1xx.c ****   *     
 240:Core/Src/system_stm32f1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 241:Core/Src/system_stm32f1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 242:Core/Src/system_stm32f1xx.c ****   *           constant and the selected clock source:
 243:Core/Src/system_stm32f1xx.c ****   *             
 244:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 245:Core/Src/system_stm32f1xx.c ****   *                                              
 246:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 247:Core/Src/system_stm32f1xx.c ****   *                          
 248:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 249:Core/Src/system_stm32f1xx.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 250:Core/Src/system_stm32f1xx.c ****   *         
 251:Core/Src/system_stm32f1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 252:Core/Src/system_stm32f1xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 253:Core/Src/system_stm32f1xx.c ****   *             in voltage and temperature.   
 254:Core/Src/system_stm32f1xx.c ****   *    
 255:Core/Src/system_stm32f1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 256:Core/Src/system_stm32f1xx.c ****   *              8 MHz or 25 MHz, depending on the product used), user has to ensure
 257:Core/Src/system_stm32f1xx.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 258:Core/Src/system_stm32f1xx.c ****   *              Otherwise, this function may have wrong result.
 259:Core/Src/system_stm32f1xx.c ****   *                
 260:Core/Src/system_stm32f1xx.c ****   *         - The result of this function could be not correct when using fractional
 261:Core/Src/system_stm32f1xx.c ****   *           value for HSE crystal.
 262:Core/Src/system_stm32f1xx.c ****   * @param  None
 263:Core/Src/system_stm32f1xx.c ****   * @retval None
 264:Core/Src/system_stm32f1xx.c ****   */
 265:Core/Src/system_stm32f1xx.c **** void SystemCoreClockUpdate (void)
 266:Core/Src/system_stm32f1xx.c **** {
 107              		.loc 1 266 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 267:Core/Src/system_stm32f1xx.c ****   uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
 112              		.loc 1 267 3 view .LVU25
 113              	.LVL0:
 268:Core/Src/system_stm32f1xx.c **** 
 269:Core/Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 270:Core/Src/system_stm32f1xx.c ****   uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;
 271:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 272:Core/Src/system_stm32f1xx.c **** 
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 8


 273:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xB) || defined(STM32F100xE)
 274:Core/Src/system_stm32f1xx.c ****   uint32_t prediv1factor = 0U;
 275:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xB or STM32F100xE */
 276:Core/Src/system_stm32f1xx.c ****     
 277:Core/Src/system_stm32f1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 278:Core/Src/system_stm32f1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 114              		.loc 1 278 3 view .LVU26
 115              		.loc 1 278 12 is_stmt 0 view .LVU27
 116 0000 114A     		ldr	r2, .L13
 117 0002 5368     		ldr	r3, [r2, #4]
 118              	.LVL1:
 279:Core/Src/system_stm32f1xx.c ****   
 280:Core/Src/system_stm32f1xx.c ****   switch (tmp)
 119              		.loc 1 280 3 is_stmt 1 view .LVU28
 278:Core/Src/system_stm32f1xx.c ****   
 120              		.loc 1 278 7 is_stmt 0 view .LVU29
 121 0004 03F00C03 		and	r3, r3, #12
 122              	.LVL2:
 123              		.loc 1 280 3 view .LVU30
 124 0008 082B     		cmp	r3, #8
 125 000a 0AD0     		beq	.L12
 126 000c 0F4B     		ldr	r3, .L13+4
 127              	.LVL3:
 128              	.L7:
 281:Core/Src/system_stm32f1xx.c ****   {
 282:Core/Src/system_stm32f1xx.c ****     case 0x00U:  /* HSI used as system clock */
 283:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 284:Core/Src/system_stm32f1xx.c ****       break;
 285:Core/Src/system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 286:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSE_VALUE;
 287:Core/Src/system_stm32f1xx.c ****       break;
 288:Core/Src/system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 289:Core/Src/system_stm32f1xx.c **** 
 290:Core/Src/system_stm32f1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 291:Core/Src/system_stm32f1xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 292:Core/Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 293:Core/Src/system_stm32f1xx.c ****       
 294:Core/Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)      
 295:Core/Src/system_stm32f1xx.c ****       pllmull = ( pllmull >> 18U) + 2U;
 296:Core/Src/system_stm32f1xx.c ****       
 297:Core/Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 298:Core/Src/system_stm32f1xx.c ****       {
 299:Core/Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 300:Core/Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 301:Core/Src/system_stm32f1xx.c ****       }
 302:Core/Src/system_stm32f1xx.c ****       else
 303:Core/Src/system_stm32f1xx.c ****       {
 304:Core/Src/system_stm32f1xx.c ****  #if defined(STM32F100xB) || defined(STM32F100xE)
 305:Core/Src/system_stm32f1xx.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 306:Core/Src/system_stm32f1xx.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 307:Core/Src/system_stm32f1xx.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 308:Core/Src/system_stm32f1xx.c ****  #else
 309:Core/Src/system_stm32f1xx.c ****         /* HSE selected as PLL clock entry */
 310:Core/Src/system_stm32f1xx.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 311:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 312:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 313:Core/Src/system_stm32f1xx.c ****         }
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 9


 314:Core/Src/system_stm32f1xx.c ****         else
 315:Core/Src/system_stm32f1xx.c ****         {
 316:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 317:Core/Src/system_stm32f1xx.c ****         }
 318:Core/Src/system_stm32f1xx.c ****  #endif
 319:Core/Src/system_stm32f1xx.c ****       }
 320:Core/Src/system_stm32f1xx.c **** #else
 321:Core/Src/system_stm32f1xx.c ****       pllmull = pllmull >> 18U;
 322:Core/Src/system_stm32f1xx.c ****       
 323:Core/Src/system_stm32f1xx.c ****       if (pllmull != 0x0DU)
 324:Core/Src/system_stm32f1xx.c ****       {
 325:Core/Src/system_stm32f1xx.c ****          pllmull += 2U;
 326:Core/Src/system_stm32f1xx.c ****       }
 327:Core/Src/system_stm32f1xx.c ****       else
 328:Core/Src/system_stm32f1xx.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 329:Core/Src/system_stm32f1xx.c ****         pllmull = 13U / 2U; 
 330:Core/Src/system_stm32f1xx.c ****       }
 331:Core/Src/system_stm32f1xx.c ****             
 332:Core/Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 333:Core/Src/system_stm32f1xx.c ****       {
 334:Core/Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 335:Core/Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 336:Core/Src/system_stm32f1xx.c ****       }
 337:Core/Src/system_stm32f1xx.c ****       else
 338:Core/Src/system_stm32f1xx.c ****       {/* PREDIV1 selected as PLL clock entry */
 339:Core/Src/system_stm32f1xx.c ****         
 340:Core/Src/system_stm32f1xx.c ****         /* Get PREDIV1 clock source and division factor */
 341:Core/Src/system_stm32f1xx.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 342:Core/Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 343:Core/Src/system_stm32f1xx.c ****         
 344:Core/Src/system_stm32f1xx.c ****         if (prediv1source == 0U)
 345:Core/Src/system_stm32f1xx.c ****         { 
 346:Core/Src/system_stm32f1xx.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 347:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 348:Core/Src/system_stm32f1xx.c ****         }
 349:Core/Src/system_stm32f1xx.c ****         else
 350:Core/Src/system_stm32f1xx.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 351:Core/Src/system_stm32f1xx.c ****           
 352:Core/Src/system_stm32f1xx.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 353:Core/Src/system_stm32f1xx.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;
 354:Core/Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 355:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 356:Core/Src/system_stm32f1xx.c ****         }
 357:Core/Src/system_stm32f1xx.c ****       }
 358:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */ 
 359:Core/Src/system_stm32f1xx.c ****       break;
 360:Core/Src/system_stm32f1xx.c **** 
 361:Core/Src/system_stm32f1xx.c ****     default:
 362:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 363:Core/Src/system_stm32f1xx.c ****       break;
 364:Core/Src/system_stm32f1xx.c ****   }
 365:Core/Src/system_stm32f1xx.c ****   
 366:Core/Src/system_stm32f1xx.c ****   /* Compute HCLK clock frequency ----------------*/
 367:Core/Src/system_stm32f1xx.c ****   /* Get HCLK prescaler */
 368:Core/Src/system_stm32f1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 129              		.loc 1 368 3 is_stmt 1 view .LVU31
 130              		.loc 1 368 28 is_stmt 0 view .LVU32
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 10


 131 000e 0E4A     		ldr	r2, .L13
 132              		.loc 1 368 22 view .LVU33
 133 0010 0F48     		ldr	r0, .L13+8
 134              		.loc 1 368 28 view .LVU34
 135 0012 5268     		ldr	r2, [r2, #4]
 136              	.LVL4:
 369:Core/Src/system_stm32f1xx.c ****   /* HCLK clock frequency */
 370:Core/Src/system_stm32f1xx.c ****   SystemCoreClock >>= tmp;  
 137              		.loc 1 370 3 is_stmt 1 view .LVU35
 138              		.loc 1 370 19 is_stmt 0 view .LVU36
 139 0014 0F49     		ldr	r1, .L13+12
 368:Core/Src/system_stm32f1xx.c ****   /* HCLK clock frequency */
 140              		.loc 1 368 52 view .LVU37
 141 0016 C2F30312 		ubfx	r2, r2, #4, #4
 142              	.LVL5:
 368:Core/Src/system_stm32f1xx.c ****   /* HCLK clock frequency */
 143              		.loc 1 368 7 view .LVU38
 144 001a 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 145              		.loc 1 370 19 view .LVU39
 146 001c D340     		lsrs	r3, r3, r2
 147 001e 0B60     		str	r3, [r1]
 371:Core/Src/system_stm32f1xx.c **** }
 148              		.loc 1 371 1 view .LVU40
 149 0020 7047     		bx	lr
 150              	.LVL6:
 151              	.L12:
 291:Core/Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 152              		.loc 1 291 7 is_stmt 1 view .LVU41
 291:Core/Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 153              		.loc 1 291 20 is_stmt 0 view .LVU42
 154 0022 5368     		ldr	r3, [r2, #4]
 155              	.LVL7:
 292:Core/Src/system_stm32f1xx.c ****       
 156              		.loc 1 292 7 is_stmt 1 view .LVU43
 292:Core/Src/system_stm32f1xx.c ****       
 157              		.loc 1 292 22 is_stmt 0 view .LVU44
 158 0024 5168     		ldr	r1, [r2, #4]
 159              	.LVL8:
 295:Core/Src/system_stm32f1xx.c ****       
 160              		.loc 1 295 7 is_stmt 1 view .LVU45
 295:Core/Src/system_stm32f1xx.c ****       
 161              		.loc 1 295 27 is_stmt 0 view .LVU46
 162 0026 C3F38343 		ubfx	r3, r3, #18, #4
 163              	.LVL9:
 297:Core/Src/system_stm32f1xx.c ****       {
 164              		.loc 1 297 10 view .LVU47
 165 002a C903     		lsls	r1, r1, #15
 166              	.LVL10:
 295:Core/Src/system_stm32f1xx.c ****       
 167              		.loc 1 295 15 view .LVU48
 168 002c 03F10203 		add	r3, r3, #2
 169              	.LVL11:
 297:Core/Src/system_stm32f1xx.c ****       {
 170              		.loc 1 297 7 is_stmt 1 view .LVU49
 297:Core/Src/system_stm32f1xx.c ****       {
 171              		.loc 1 297 10 is_stmt 0 view .LVU50
 172 0030 06D5     		bpl	.L11
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 11


 310:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 173              		.loc 1 310 9 is_stmt 1 view .LVU51
 310:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 174              		.loc 1 310 17 is_stmt 0 view .LVU52
 175 0032 5268     		ldr	r2, [r2, #4]
 310:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 176              		.loc 1 310 12 view .LVU53
 177 0034 9203     		lsls	r2, r2, #14
 178 0036 03D4     		bmi	.L11
 316:Core/Src/system_stm32f1xx.c ****         }
 179              		.loc 1 316 11 is_stmt 1 view .LVU54
 316:Core/Src/system_stm32f1xx.c ****         }
 180              		.loc 1 316 39 is_stmt 0 view .LVU55
 181 0038 044A     		ldr	r2, .L13+4
 182 003a 02FB03F3 		mul	r3, r2, r3
 183              	.LVL12:
 316:Core/Src/system_stm32f1xx.c ****         }
 184              		.loc 1 316 39 view .LVU56
 185 003e E6E7     		b	.L7
 186              	.LVL13:
 187              	.L11:
 312:Core/Src/system_stm32f1xx.c ****         }
 188              		.loc 1 312 11 is_stmt 1 view .LVU57
 312:Core/Src/system_stm32f1xx.c ****         }
 189              		.loc 1 312 47 is_stmt 0 view .LVU58
 190 0040 054A     		ldr	r2, .L13+16
 191 0042 02FB03F3 		mul	r3, r2, r3
 192              	.LVL14:
 312:Core/Src/system_stm32f1xx.c ****         }
 193              		.loc 1 312 47 view .LVU59
 194 0046 E2E7     		b	.L7
 195              	.L14:
 196              		.align	2
 197              	.L13:
 198 0048 00100240 		.word	1073876992
 199 004c 00127A00 		.word	8000000
 200 0050 00000000 		.word	.LANCHOR1
 201 0054 00000000 		.word	.LANCHOR0
 202 0058 00093D00 		.word	4000000
 203              		.cfi_endproc
 204              	.LFE66:
 206              		.global	APBPrescTable
 207              		.global	AHBPrescTable
 208              		.global	SystemCoreClock
 209              		.section	.data.SystemCoreClock,"aw"
 210              		.align	2
 211              		.set	.LANCHOR0,. + 0
 214              	SystemCoreClock:
 215 0000 00A24A04 		.word	72000000
 216              		.section	.rodata.AHBPrescTable,"a"
 217              		.align	2
 218              		.set	.LANCHOR1,. + 0
 221              	AHBPrescTable:
 222 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 222      00000000 
 222      01020304 
 222      06
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 12


 223 000d 070809   		.ascii	"\007\010\011"
 224              		.section	.rodata.APBPrescTable,"a"
 225              		.align	2
 228              	APBPrescTable:
 229 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 229      01020304 
 230              		.text
 231              	.Letext0:
 232              		.file 2 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 233              		.file 3 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 234              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 235              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 236              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 237              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f1xx.c
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:18     .text.SystemInit:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:25     .text.SystemInit:00000000 SystemInit
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:91     .text.SystemInit:00000044 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:98     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:105    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:198    .text.SystemCoreClockUpdate:00000048 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:228    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:221    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:214    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:210    .data.SystemCoreClock:00000000 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:217    .rodata.AHBPrescTable:00000000 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccv1kPqF.s:225    .rodata.APBPrescTable:00000000 $d

NO UNDEFINED SYMBOLS
