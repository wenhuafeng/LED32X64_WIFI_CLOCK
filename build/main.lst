ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemClock_Config
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	SystemClock_Config:
  26              	.LFB66:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   ** This notice applies to any and all portions of this file
   8:Core/Src/main.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Core/Src/main.c ****   * USER CODE END. Other portions of this file, whether
  10:Core/Src/main.c ****   * inserted by the user or by software development tools
  11:Core/Src/main.c ****   * are owned by their respective copyright owners.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Core/Src/main.c ****   * are permitted provided that the following conditions are met:
  17:Core/Src/main.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Core/Src/main.c ****   *      this list of conditions and the following disclaimer.
  19:Core/Src/main.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Core/Src/main.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:Core/Src/main.c ****   *      and/or other materials provided with the distribution.
  22:Core/Src/main.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Core/Src/main.c ****   *      may be used to endorse or promote products derived from this software
  24:Core/Src/main.c ****   *      without specific prior written permission.
  25:Core/Src/main.c ****   *
  26:Core/Src/main.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Core/Src/main.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Core/Src/main.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Core/Src/main.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Core/Src/main.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Core/Src/main.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 2


  32:Core/Src/main.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Core/Src/main.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Core/Src/main.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Core/Src/main.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Core/Src/main.c ****   *
  37:Core/Src/main.c ****   ******************************************************************************
  38:Core/Src/main.c ****   */
  39:Core/Src/main.c **** /* USER CODE END Header */
  40:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  41:Core/Src/main.c **** #include "main.h"
  42:Core/Src/main.c **** #include "dma.h"
  43:Core/Src/main.c **** #include "rtc.h"
  44:Core/Src/main.c **** #include "tim.h"
  45:Core/Src/main.c **** #include "usart.h"
  46:Core/Src/main.c **** #include "gpio.h"
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  49:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  50:Core/Src/main.c **** #include "common.h"
  51:Core/Src/main.c **** /* USER CODE END Includes */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  54:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PTD */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN PD */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PD */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN PM */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PM */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE BEGIN PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END PV */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  75:Core/Src/main.c **** void SystemClock_Config(void);
  76:Core/Src/main.c **** static void MX_NVIC_Init(void);
  77:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE END PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  82:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* USER CODE END 0 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /**
  87:Core/Src/main.c ****   * @brief  The application entry point.
  88:Core/Src/main.c ****   * @retval int
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 3


  89:Core/Src/main.c ****   */
  90:Core/Src/main.c **** int main(void)
  91:Core/Src/main.c **** {
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  99:Core/Src/main.c ****   HAL_Init();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END Init */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Configure the system clock */
 106:Core/Src/main.c ****   SystemClock_Config();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END SysInit */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Initialize all configured peripherals */
 113:Core/Src/main.c ****   MX_GPIO_Init();
 114:Core/Src/main.c ****   MX_RTC_Init();
 115:Core/Src/main.c ****   MX_TIM4_Init();
 116:Core/Src/main.c ****   MX_DMA_Init();
 117:Core/Src/main.c ****   MX_USART1_UART_Init();
 118:Core/Src/main.c ****   MX_USART2_UART_Init();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Initialize interrupts */
 121:Core/Src/main.c ****   MX_NVIC_Init();
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 123:Core/Src/main.c ****   COMMON_Init();
 124:Core/Src/main.c ****   /* USER CODE END 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Infinite loop */
 127:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 128:Core/Src/main.c ****   while (1)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     /* USER CODE END WHILE */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c ****     COMMON_Process();
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c ****   /* USER CODE END 3 */
 136:Core/Src/main.c **** }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** /**
 139:Core/Src/main.c ****   * @brief System Clock Configuration
 140:Core/Src/main.c ****   * @retval None
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c **** void SystemClock_Config(void)
 143:Core/Src/main.c **** {
  28              		.loc 1 143 1 view -0
  29              		.cfi_startproc
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 4


  30              		@ args = 0, pretend = 0, frame = 80
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  32              		.loc 1 144 3 view .LVU1
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 146:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 149:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 154:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
  33              		.loc 1 154 30 is_stmt 0 view .LVU2
  34 0000 0123     		movs	r3, #1
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  35              		.loc 1 143 1 view .LVU3
  36 0002 30B5     		push	{r4, r5, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  42              		.loc 1 151 36 view .LVU4
  43 0004 4FF48031 		mov	r1, #65536
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  44              		.loc 1 143 1 view .LVU5
  45 0008 95B0     		sub	sp, sp, #84
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 96
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  48              		.loc 1 151 36 view .LVU6
  49 000a 0520     		movs	r0, #5
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  50              		.loc 1 144 22 view .LVU7
  51 000c 0024     		movs	r4, #0
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  52              		.loc 1 156 34 view .LVU8
  53 000e 0225     		movs	r5, #2
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  54              		.loc 1 157 35 view .LVU9
  55 0010 4FF48032 		mov	r2, #65536
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  56              		.loc 1 155 30 view .LVU10
  57 0014 CDE90D33 		strd	r3, r3, [sp, #52]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  58              		.loc 1 158 32 view .LVU11
  59 0018 4FF4E013 		mov	r3, #1835008
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  60              		.loc 1 151 36 view .LVU12
  61 001c CDE90A01 		strd	r0, [sp, #40]
 159:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  62              		.loc 1 159 7 view .LVU13
  63 0020 0AA8     		add	r0, sp, #40
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 5


 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  64              		.loc 1 157 35 view .LVU14
  65 0022 1292     		str	r2, [sp, #72]
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  66              		.loc 1 158 32 view .LVU15
  67 0024 1393     		str	r3, [sp, #76]
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  68              		.loc 1 144 22 view .LVU16
  69 0026 CDE90F44 		strd	r4, r4, [sp, #60]
 145:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  70              		.loc 1 145 3 is_stmt 1 view .LVU17
 145:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  71              		.loc 1 145 22 is_stmt 0 view .LVU18
  72 002a CDE90544 		strd	r4, r4, [sp, #20]
  73 002e CDE90744 		strd	r4, r4, [sp, #28]
 146:Core/Src/main.c **** 
  74              		.loc 1 146 3 is_stmt 1 view .LVU19
 146:Core/Src/main.c **** 
  75              		.loc 1 146 28 is_stmt 0 view .LVU20
  76 0032 CDE90144 		strd	r4, r4, [sp, #4]
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 144 22 view .LVU21
  78 0036 0C94     		str	r4, [sp, #48]
 145:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  79              		.loc 1 145 22 view .LVU22
  80 0038 0494     		str	r4, [sp, #16]
 146:Core/Src/main.c **** 
  81              		.loc 1 146 28 view .LVU23
  82 003a 0094     		str	r4, [sp]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  83              		.loc 1 156 34 view .LVU24
  84 003c 1195     		str	r5, [sp, #68]
 146:Core/Src/main.c **** 
  85              		.loc 1 146 28 view .LVU25
  86 003e 0394     		str	r4, [sp, #12]
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 151 3 is_stmt 1 view .LVU26
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  88              		.loc 1 152 3 view .LVU27
 153:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
  89              		.loc 1 153 3 view .LVU28
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  90              		.loc 1 154 3 view .LVU29
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  91              		.loc 1 155 3 view .LVU30
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  92              		.loc 1 156 3 view .LVU31
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  93              		.loc 1 157 3 view .LVU32
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  94              		.loc 1 158 3 view .LVU33
  95              		.loc 1 159 3 view .LVU34
  96              		.loc 1 159 7 is_stmt 0 view .LVU35
  97 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
  98              	.LVL0:
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 6


 162:Core/Src/main.c ****   }
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  99              		.loc 1 165 3 is_stmt 1 view .LVU36
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 100              		.loc 1 167 3 view .LVU37
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 101              		.loc 1 168 3 view .LVU38
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 102              		.loc 1 169 3 view .LVU39
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 103              		.loc 1 165 31 is_stmt 0 view .LVU40
 104 0044 0F22     		movs	r2, #15
 105 0046 0223     		movs	r3, #2
 106 0048 CDE90423 		strd	r2, [sp, #16]
 107 004c 0022     		movs	r2, #0
 108 004e 4FF48063 		mov	r3, #1024
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 109              		.loc 1 172 7 view .LVU41
 110 0052 2946     		mov	r1, r5
 111 0054 04A8     		add	r0, sp, #16
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 112              		.loc 1 165 31 view .LVU42
 113 0056 CDE90623 		strd	r2, [sp, #24]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 114              		.loc 1 170 3 is_stmt 1 view .LVU43
 115              		.loc 1 172 3 view .LVU44
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 116              		.loc 1 170 36 is_stmt 0 view .LVU45
 117 005a 0894     		str	r4, [sp, #32]
 118              		.loc 1 172 7 view .LVU46
 119 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 120              	.LVL1:
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 121              		.loc 1 176 3 is_stmt 1 view .LVU47
 177:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 122              		.loc 1 177 3 view .LVU48
 176:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 123              		.loc 1 176 38 is_stmt 0 view .LVU49
 124 0060 0122     		movs	r2, #1
 125 0062 4FF48073 		mov	r3, #256
 178:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 126              		.loc 1 178 7 view .LVU50
 127 0066 6846     		mov	r0, sp
 176:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 128              		.loc 1 176 38 view .LVU51
 129 0068 CDE90023 		strd	r2, [sp]
 130              		.loc 1 178 3 is_stmt 1 view .LVU52
 131              		.loc 1 178 7 is_stmt 0 view .LVU53
 132 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 7


 133              	.LVL2:
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     Error_Handler();
 181:Core/Src/main.c ****   }
 182:Core/Src/main.c **** }
 134              		.loc 1 182 1 view .LVU54
 135 0070 15B0     		add	sp, sp, #84
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 12
 138              		@ sp needed
 139 0072 30BD     		pop	{r4, r5, pc}
 140              		.cfi_endproc
 141              	.LFE66:
 143              		.section	.text.startup.main,"ax",%progbits
 144              		.align	1
 145              		.p2align 2,,3
 146              		.global	main
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 151              	main:
 152              	.LFB65:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 153              		.loc 1 91 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ Volatile: function does not return.
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
  99:Core/Src/main.c **** 
 158              		.loc 1 99 3 view .LVU56
  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 159              		.loc 1 91 1 is_stmt 0 view .LVU57
 160 0000 08B5     		push	{r3, lr}
 161              	.LCFI3:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 3, -8
 164              		.cfi_offset 14, -4
  99:Core/Src/main.c **** 
 165              		.loc 1 99 3 view .LVU58
 166 0002 FFF7FEFF 		bl	HAL_Init
 167              	.LVL3:
 106:Core/Src/main.c **** 
 168              		.loc 1 106 3 is_stmt 1 view .LVU59
 169 0006 FFF7FEFF 		bl	SystemClock_Config
 170              	.LVL4:
 113:Core/Src/main.c ****   MX_RTC_Init();
 171              		.loc 1 113 3 view .LVU60
 172 000a FFF7FEFF 		bl	MX_GPIO_Init
 173              	.LVL5:
 114:Core/Src/main.c ****   MX_TIM4_Init();
 174              		.loc 1 114 3 view .LVU61
 175 000e FFF7FEFF 		bl	MX_RTC_Init
 176              	.LVL6:
 115:Core/Src/main.c ****   MX_DMA_Init();
 177              		.loc 1 115 3 view .LVU62
 178 0012 FFF7FEFF 		bl	MX_TIM4_Init
 179              	.LVL7:
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 8


 116:Core/Src/main.c ****   MX_USART1_UART_Init();
 180              		.loc 1 116 3 view .LVU63
 181 0016 FFF7FEFF 		bl	MX_DMA_Init
 182              	.LVL8:
 117:Core/Src/main.c ****   MX_USART2_UART_Init();
 183              		.loc 1 117 3 view .LVU64
 184 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 185              	.LVL9:
 118:Core/Src/main.c **** 
 186              		.loc 1 118 3 view .LVU65
 187 001e FFF7FEFF 		bl	MX_USART2_UART_Init
 188              	.LVL10:
 121:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 189              		.loc 1 121 3 view .LVU66
 190              	.LBB10:
 191              	.LBI10:
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief NVIC Configuration.
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** static void MX_NVIC_Init(void)
 192              		.loc 1 188 13 view .LVU67
 193              	.LBB11:
 189:Core/Src/main.c **** {
 190:Core/Src/main.c ****   /* TIM4_IRQn interrupt configuration */
 191:Core/Src/main.c ****   HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 194              		.loc 1 191 3 view .LVU68
 195 0022 0022     		movs	r2, #0
 196 0024 1E20     		movs	r0, #30
 197 0026 1146     		mov	r1, r2
 198 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 199              	.LVL11:
 192:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(TIM4_IRQn);
 200              		.loc 1 192 3 view .LVU69
 201 002c 1E20     		movs	r0, #30
 202 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 203              	.LVL12:
 193:Core/Src/main.c ****   /* RTC_IRQn interrupt configuration */
 194:Core/Src/main.c ****   HAL_NVIC_SetPriority(RTC_IRQn, 1, 1);
 204              		.loc 1 194 3 view .LVU70
 205 0032 0122     		movs	r2, #1
 206 0034 0320     		movs	r0, #3
 207 0036 1146     		mov	r1, r2
 208 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 209              	.LVL13:
 195:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(RTC_IRQn);
 210              		.loc 1 195 3 view .LVU71
 211 003c 0320     		movs	r0, #3
 212 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 213              	.LVL14:
 196:Core/Src/main.c ****   /* EXTI0_IRQn interrupt configuration */
 197:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 2);
 214              		.loc 1 197 3 view .LVU72
 215 0042 0222     		movs	r2, #2
 216 0044 0121     		movs	r1, #1
 217 0046 0620     		movs	r0, #6
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 9


 218 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 219              	.LVL15:
 198:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 220              		.loc 1 198 3 view .LVU73
 221 004c 0620     		movs	r0, #6
 222 004e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 223              	.LVL16:
 224              	.LBE11:
 225              	.LBE10:
 123:Core/Src/main.c ****   /* USER CODE END 2 */
 226              		.loc 1 123 3 view .LVU74
 227 0052 FFF7FEFF 		bl	COMMON_Init
 228              	.LVL17:
 229              	.L5:
 128:Core/Src/main.c ****   {
 230              		.loc 1 128 3 discriminator 1 view .LVU75
 133:Core/Src/main.c ****   }
 231              		.loc 1 133 5 discriminator 1 view .LVU76
 232 0056 FFF7FEFF 		bl	COMMON_Process
 233              	.LVL18:
 128:Core/Src/main.c ****   {
 234              		.loc 1 128 9 discriminator 1 view .LVU77
 235 005a FCE7     		b	.L5
 236              		.cfi_endproc
 237              	.LFE65:
 239              		.section	.text.Error_Handler,"ax",%progbits
 240              		.align	1
 241              		.p2align 2,,3
 242              		.global	Error_Handler
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 247              	Error_Handler:
 248              	.LFB68:
 199:Core/Src/main.c **** }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** /* USER CODE END 4 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** /**
 206:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 207:Core/Src/main.c ****   * @retval None
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c **** void Error_Handler(void)
 210:Core/Src/main.c **** {
 249              		.loc 1 210 1 view -0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 211:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 212:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 215:Core/Src/main.c **** }
 254              		.loc 1 215 1 view .LVU79
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 10


 255 0000 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE68:
 259 0002 00BF     		.section	.text.assert_failed,"ax",%progbits
 260              		.align	1
 261              		.p2align 2,,3
 262              		.global	assert_failed
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 267              	assert_failed:
 268              	.LVL19:
 269              	.LFB69:
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 218:Core/Src/main.c **** /**
 219:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 220:Core/Src/main.c ****   *         where the assert_param error has occurred.
 221:Core/Src/main.c ****   * @param  file: pointer to the source file name
 222:Core/Src/main.c ****   * @param  line: assert_param error line source number
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** void assert_failed(uint8_t *file, uint32_t line)
 226:Core/Src/main.c **** {
 270              		.loc 1 226 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 227:Core/Src/main.c ****   /* USER CODE BEGIN 6 */
 228:Core/Src/main.c ****   /* User can add his own implementation to report the file name and line number,
 229:Core/Src/main.c ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 230:Core/Src/main.c ****   /* USER CODE END 6 */
 231:Core/Src/main.c **** }
 275              		.loc 1 231 1 view .LVU81
 276 0000 7047     		bx	lr
 277              		.cfi_endproc
 278              	.LFE69:
 280 0002 00BF     		.text
 281              	.Letext0:
 282              		.file 2 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 283              		.file 3 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 284              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 285              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 286              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 287              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 288              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 289              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 290              		.file 10 "Core/Inc/gpio.h"
 291              		.file 11 "Core/Inc/rtc.h"
 292              		.file 12 "Core/Inc/tim.h"
 293              		.file 13 "Core/Inc/dma.h"
 294              		.file 14 "Core/Inc/usart.h"
 295              		.file 15 "user/common/common.h"
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s:18     .text.SystemClock_Config:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s:25     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s:144    .text.startup.main:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s:151    .text.startup.main:00000000 main
C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s:240    .text.Error_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s:247    .text.Error_Handler:00000000 Error_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s:260    .text.assert_failed:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccAk4z3Y.s:267    .text.assert_failed:00000000 assert_failed

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_RTC_Init
MX_TIM4_Init
MX_DMA_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
COMMON_Init
COMMON_Process
