ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
  27              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   *
   8:Core/Src/stm32f1xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Core/Src/stm32f1xx_it.c ****   *
  10:Core/Src/stm32f1xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Core/Src/stm32f1xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Core/Src/stm32f1xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Core/Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Core/Src/stm32f1xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Core/Src/stm32f1xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Core/Src/stm32f1xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Core/Src/stm32f1xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Core/Src/stm32f1xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Core/Src/stm32f1xx_it.c ****   *      without specific prior written permission.
  20:Core/Src/stm32f1xx_it.c ****   *
  21:Core/Src/stm32f1xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Core/Src/stm32f1xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Core/Src/stm32f1xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Core/Src/stm32f1xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Core/Src/stm32f1xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Core/Src/stm32f1xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Core/Src/stm32f1xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Core/Src/stm32f1xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Core/Src/stm32f1xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Core/Src/stm32f1xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Core/Src/stm32f1xx_it.c ****   *
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 2


  32:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  33:Core/Src/stm32f1xx_it.c ****   */
  34:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  35:Core/Src/stm32f1xx_it.c **** 
  36:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Core/Src/stm32f1xx_it.c **** #include "main.h"
  38:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  39:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  41:Core/Src/stm32f1xx_it.c **** #include "time.h"
  42:Core/Src/stm32f1xx_it.c **** #include "hub75d.h"
  43:Core/Src/stm32f1xx_it.c **** #include "wifi_uart_if.h"
  44:Core/Src/stm32f1xx_it.c **** #include "trace_uart_if.h"
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  48:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  49:Core/Src/stm32f1xx_it.c **** 
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  53:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  54:Core/Src/stm32f1xx_it.c **** 
  55:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  58:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  59:Core/Src/stm32f1xx_it.c **** 
  60:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  61:Core/Src/stm32f1xx_it.c **** 
  62:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  63:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  64:Core/Src/stm32f1xx_it.c **** 
  65:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  66:Core/Src/stm32f1xx_it.c **** 
  67:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/stm32f1xx_it.c **** 
  70:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  71:Core/Src/stm32f1xx_it.c **** 
  72:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/stm32f1xx_it.c **** 
  75:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  76:Core/Src/stm32f1xx_it.c **** 
  77:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  78:Core/Src/stm32f1xx_it.c **** extern RTC_HandleTypeDef hrtc;
  79:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim4;
  80:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  81:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  82:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  83:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_tx;
  84:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  85:Core/Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart2;
  86:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  87:Core/Src/stm32f1xx_it.c **** 
  88:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 3


  89:Core/Src/stm32f1xx_it.c **** 
  90:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  91:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  92:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  93:Core/Src/stm32f1xx_it.c **** /**
  94:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  95:Core/Src/stm32f1xx_it.c ****   */
  96:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  97:Core/Src/stm32f1xx_it.c **** {
  28              		.loc 1 97 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  98:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  99:Core/Src/stm32f1xx_it.c **** 
 100:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
 101:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
 102:Core/Src/stm32f1xx_it.c **** 
 103:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
 104:Core/Src/stm32f1xx_it.c **** }
  33              		.loc 1 104 1 view .LVU1
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE65:
  38 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.p2align 2,,3
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	HardFault_Handler:
  47              	.LFB66:
 105:Core/Src/stm32f1xx_it.c **** 
 106:Core/Src/stm32f1xx_it.c **** /**
 107:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
 108:Core/Src/stm32f1xx_it.c ****   */
 109:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
 110:Core/Src/stm32f1xx_it.c **** {
  48              		.loc 1 110 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L4:
 111:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 112:Core/Src/stm32f1xx_it.c **** 
 113:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 114:Core/Src/stm32f1xx_it.c ****   while (1)
  55              		.loc 1 114 3 discriminator 1 view .LVU3
 115:Core/Src/stm32f1xx_it.c ****   {
 116:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 117:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 118:Core/Src/stm32f1xx_it.c ****   }
  56              		.loc 1 118 3 discriminator 1 view .LVU4
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 4


 114:Core/Src/stm32f1xx_it.c ****   {
  57              		.loc 1 114 9 discriminator 1 view .LVU5
  58 0000 FEE7     		b	.L4
  59              		.cfi_endproc
  60              	.LFE66:
  62 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.p2align 2,,3
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	MemManage_Handler:
  71              	.LFB67:
 119:Core/Src/stm32f1xx_it.c **** }
 120:Core/Src/stm32f1xx_it.c **** 
 121:Core/Src/stm32f1xx_it.c **** /**
 122:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 123:Core/Src/stm32f1xx_it.c ****   */
 124:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 125:Core/Src/stm32f1xx_it.c **** {
  72              		.loc 1 125 1 view -0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.L6:
 126:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 127:Core/Src/stm32f1xx_it.c **** 
 128:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 129:Core/Src/stm32f1xx_it.c ****   while (1)
  79              		.loc 1 129 3 discriminator 1 view .LVU7
 130:Core/Src/stm32f1xx_it.c ****   {
 131:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 132:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c ****   }
  80              		.loc 1 133 3 discriminator 1 view .LVU8
 129:Core/Src/stm32f1xx_it.c ****   {
  81              		.loc 1 129 9 discriminator 1 view .LVU9
  82 0000 FEE7     		b	.L6
  83              		.cfi_endproc
  84              	.LFE67:
  86 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  87              		.align	1
  88              		.p2align 2,,3
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB68:
 134:Core/Src/stm32f1xx_it.c **** }
 135:Core/Src/stm32f1xx_it.c **** 
 136:Core/Src/stm32f1xx_it.c **** /**
 137:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 138:Core/Src/stm32f1xx_it.c ****   */
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 5


 139:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 140:Core/Src/stm32f1xx_it.c **** {
  96              		.loc 1 140 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 141:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 142:Core/Src/stm32f1xx_it.c **** 
 143:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 144:Core/Src/stm32f1xx_it.c ****   while (1)
 103              		.loc 1 144 3 discriminator 1 view .LVU11
 145:Core/Src/stm32f1xx_it.c ****   {
 146:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 147:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 148:Core/Src/stm32f1xx_it.c ****   }
 104              		.loc 1 148 3 discriminator 1 view .LVU12
 144:Core/Src/stm32f1xx_it.c ****   {
 105              		.loc 1 144 9 discriminator 1 view .LVU13
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
 108              	.LFE68:
 110 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.p2align 2,,3
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	UsageFault_Handler:
 119              	.LFB69:
 149:Core/Src/stm32f1xx_it.c **** }
 150:Core/Src/stm32f1xx_it.c **** 
 151:Core/Src/stm32f1xx_it.c **** /**
 152:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 153:Core/Src/stm32f1xx_it.c ****   */
 154:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 155:Core/Src/stm32f1xx_it.c **** {
 120              		.loc 1 155 1 view -0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.L10:
 156:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 157:Core/Src/stm32f1xx_it.c **** 
 158:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 159:Core/Src/stm32f1xx_it.c ****   while (1)
 127              		.loc 1 159 3 discriminator 1 view .LVU15
 160:Core/Src/stm32f1xx_it.c ****   {
 161:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 162:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 163:Core/Src/stm32f1xx_it.c ****   }
 128              		.loc 1 163 3 discriminator 1 view .LVU16
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 6


 159:Core/Src/stm32f1xx_it.c ****   {
 129              		.loc 1 159 9 discriminator 1 view .LVU17
 130 0000 FEE7     		b	.L10
 131              		.cfi_endproc
 132              	.LFE69:
 134 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 135              		.align	1
 136              		.p2align 2,,3
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB84:
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE84:
 152 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.p2align 2,,3
 155              		.global	DebugMon_Handler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	DebugMon_Handler:
 161              	.LFB86:
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE86:
 170 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 171              		.align	1
 172              		.p2align 2,,3
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	PendSV_Handler:
 179              	.LFB88:
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE88:
 188 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 189              		.align	1
 190              		.p2align 2,,3
 191              		.global	SysTick_Handler
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 7


 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	SysTick_Handler:
 197              	.LFB73:
 164:Core/Src/stm32f1xx_it.c **** }
 165:Core/Src/stm32f1xx_it.c **** 
 166:Core/Src/stm32f1xx_it.c **** /**
 167:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 168:Core/Src/stm32f1xx_it.c ****   */
 169:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 170:Core/Src/stm32f1xx_it.c **** {
 171:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 172:Core/Src/stm32f1xx_it.c **** 
 173:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 175:Core/Src/stm32f1xx_it.c **** 
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 177:Core/Src/stm32f1xx_it.c **** }
 178:Core/Src/stm32f1xx_it.c **** 
 179:Core/Src/stm32f1xx_it.c **** /**
 180:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 181:Core/Src/stm32f1xx_it.c ****   */
 182:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 183:Core/Src/stm32f1xx_it.c **** {
 184:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 185:Core/Src/stm32f1xx_it.c **** 
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 187:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 188:Core/Src/stm32f1xx_it.c **** 
 189:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 190:Core/Src/stm32f1xx_it.c **** }
 191:Core/Src/stm32f1xx_it.c **** 
 192:Core/Src/stm32f1xx_it.c **** /**
 193:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 194:Core/Src/stm32f1xx_it.c ****   */
 195:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 196:Core/Src/stm32f1xx_it.c **** {
 197:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 198:Core/Src/stm32f1xx_it.c **** 
 199:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 200:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 201:Core/Src/stm32f1xx_it.c **** 
 202:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 203:Core/Src/stm32f1xx_it.c **** }
 204:Core/Src/stm32f1xx_it.c **** 
 205:Core/Src/stm32f1xx_it.c **** /**
 206:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 207:Core/Src/stm32f1xx_it.c ****   */
 208:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 209:Core/Src/stm32f1xx_it.c **** {
 198              		.loc 1 209 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 210:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 8


 211:Core/Src/stm32f1xx_it.c **** 
 212:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 213:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 203              		.loc 1 213 3 view .LVU19
 204 0000 FFF7FEBF 		b	HAL_IncTick
 205              	.LVL0:
 206              		.cfi_endproc
 207              	.LFE73:
 209              		.section	.text.RTC_IRQHandler,"ax",%progbits
 210              		.align	1
 211              		.p2align 2,,3
 212              		.global	RTC_IRQHandler
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	RTC_IRQHandler:
 218              	.LFB74:
 214:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 215:Core/Src/stm32f1xx_it.c **** 
 216:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 217:Core/Src/stm32f1xx_it.c **** }
 218:Core/Src/stm32f1xx_it.c **** 
 219:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 220:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 221:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 222:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 223:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 224:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 225:Core/Src/stm32f1xx_it.c **** 
 226:Core/Src/stm32f1xx_it.c **** /**
 227:Core/Src/stm32f1xx_it.c ****   * @brief This function handles RTC global interrupt.
 228:Core/Src/stm32f1xx_it.c ****   */
 229:Core/Src/stm32f1xx_it.c **** void RTC_IRQHandler(void)
 230:Core/Src/stm32f1xx_it.c **** {
 219              		.loc 1 230 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 231:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN RTC_IRQn 0 */
 232:Core/Src/stm32f1xx_it.c **** 
 233:Core/Src/stm32f1xx_it.c ****   /* USER CODE END RTC_IRQn 0 */
 234:Core/Src/stm32f1xx_it.c ****   HAL_RTCEx_RTCIRQHandler(&hrtc);
 223              		.loc 1 234 3 view .LVU21
 230:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN RTC_IRQn 0 */
 224              		.loc 1 230 1 is_stmt 0 view .LVU22
 225 0000 08B5     		push	{r3, lr}
 226              	.LCFI0:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 3, -8
 229              		.cfi_offset 14, -4
 230              		.loc 1 234 3 view .LVU23
 231 0002 0648     		ldr	r0, .L17
 232 0004 FFF7FEFF 		bl	HAL_RTCEx_RTCIRQHandler
 233              	.LVL1:
 235:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN RTC_IRQn 1 */
 236:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_12);
 234              		.loc 1 236 3 is_stmt 1 view .LVU24
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 9


 235 0008 0548     		ldr	r0, .L17+4
 236 000a 4FF48051 		mov	r1, #4096
 237 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 238              	.LVL2:
 237:Core/Src/stm32f1xx_it.c ****   Set1sFlag(true);
 239              		.loc 1 237 3 view .LVU25
 238:Core/Src/stm32f1xx_it.c ****   /* USER CODE END RTC_IRQn 1 */
 239:Core/Src/stm32f1xx_it.c **** }
 240              		.loc 1 239 1 is_stmt 0 view .LVU26
 241 0012 BDE80840 		pop	{r3, lr}
 242              	.LCFI1:
 243              		.cfi_restore 14
 244              		.cfi_restore 3
 245              		.cfi_def_cfa_offset 0
 237:Core/Src/stm32f1xx_it.c ****   Set1sFlag(true);
 246              		.loc 1 237 3 view .LVU27
 247 0016 0120     		movs	r0, #1
 248 0018 FFF7FEBF 		b	Set1sFlag
 249              	.LVL3:
 250              	.L18:
 251              		.align	2
 252              	.L17:
 253 001c 00000000 		.word	hrtc
 254 0020 000C0140 		.word	1073810432
 255              		.cfi_endproc
 256              	.LFE74:
 258              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 259              		.align	1
 260              		.p2align 2,,3
 261              		.global	EXTI0_IRQHandler
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	EXTI0_IRQHandler:
 267              	.LFB75:
 240:Core/Src/stm32f1xx_it.c **** 
 241:Core/Src/stm32f1xx_it.c **** /**
 242:Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line0 interrupt.
 243:Core/Src/stm32f1xx_it.c ****   */
 244:Core/Src/stm32f1xx_it.c **** void EXTI0_IRQHandler(void)
 245:Core/Src/stm32f1xx_it.c **** {
 268              		.loc 1 245 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 246:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 247:Core/Src/stm32f1xx_it.c **** 
 248:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 249:Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 273              		.loc 1 249 3 view .LVU29
 274 0000 0120     		movs	r0, #1
 275 0002 FFF7FEBF 		b	HAL_GPIO_EXTI_IRQHandler
 276              	.LVL4:
 277              		.cfi_endproc
 278              	.LFE75:
 280 0006 00BF     		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 10


 281              		.align	1
 282              		.p2align 2,,3
 283              		.global	DMA1_Channel4_IRQHandler
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	DMA1_Channel4_IRQHandler:
 289              	.LFB76:
 250:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 251:Core/Src/stm32f1xx_it.c **** 
 252:Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 253:Core/Src/stm32f1xx_it.c **** }
 254:Core/Src/stm32f1xx_it.c **** 
 255:Core/Src/stm32f1xx_it.c **** /**
 256:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 257:Core/Src/stm32f1xx_it.c ****   */
 258:Core/Src/stm32f1xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 259:Core/Src/stm32f1xx_it.c **** {
 290              		.loc 1 259 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 260:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 261:Core/Src/stm32f1xx_it.c **** 
 262:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 263:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 295              		.loc 1 263 3 view .LVU31
 296 0000 0148     		ldr	r0, .L21
 297 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 298              	.LVL5:
 299              	.L22:
 300 0006 00BF     		.align	2
 301              	.L21:
 302 0008 00000000 		.word	hdma_usart1_tx
 303              		.cfi_endproc
 304              	.LFE76:
 306              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 307              		.align	1
 308              		.p2align 2,,3
 309              		.global	DMA1_Channel5_IRQHandler
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	DMA1_Channel5_IRQHandler:
 315              	.LFB77:
 264:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 265:Core/Src/stm32f1xx_it.c **** 
 266:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 267:Core/Src/stm32f1xx_it.c **** }
 268:Core/Src/stm32f1xx_it.c **** 
 269:Core/Src/stm32f1xx_it.c **** /**
 270:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 271:Core/Src/stm32f1xx_it.c ****   */
 272:Core/Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 273:Core/Src/stm32f1xx_it.c **** {
 316              		.loc 1 273 1 view -0
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 11


 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 274:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 275:Core/Src/stm32f1xx_it.c **** 
 276:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 277:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 321              		.loc 1 277 3 view .LVU33
 322 0000 0148     		ldr	r0, .L24
 323 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 324              	.LVL6:
 325              	.L25:
 326 0006 00BF     		.align	2
 327              	.L24:
 328 0008 00000000 		.word	hdma_usart1_rx
 329              		.cfi_endproc
 330              	.LFE77:
 332              		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 333              		.align	1
 334              		.p2align 2,,3
 335              		.global	DMA1_Channel6_IRQHandler
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 340              	DMA1_Channel6_IRQHandler:
 341              	.LFB78:
 278:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 279:Core/Src/stm32f1xx_it.c **** 
 280:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 281:Core/Src/stm32f1xx_it.c **** }
 282:Core/Src/stm32f1xx_it.c **** 
 283:Core/Src/stm32f1xx_it.c **** /**
 284:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel6 global interrupt.
 285:Core/Src/stm32f1xx_it.c ****   */
 286:Core/Src/stm32f1xx_it.c **** void DMA1_Channel6_IRQHandler(void)
 287:Core/Src/stm32f1xx_it.c **** {
 342              		.loc 1 287 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 288:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 0 */
 289:Core/Src/stm32f1xx_it.c **** 
 290:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 0 */
 291:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 347              		.loc 1 291 3 view .LVU35
 348 0000 0148     		ldr	r0, .L27
 349 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 350              	.LVL7:
 351              	.L28:
 352 0006 00BF     		.align	2
 353              	.L27:
 354 0008 00000000 		.word	hdma_usart2_rx
 355              		.cfi_endproc
 356              	.LFE78:
 358              		.section	.text.DMA1_Channel7_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 12


 359              		.align	1
 360              		.p2align 2,,3
 361              		.global	DMA1_Channel7_IRQHandler
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	DMA1_Channel7_IRQHandler:
 367              	.LFB79:
 292:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 1 */
 293:Core/Src/stm32f1xx_it.c **** 
 294:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 1 */
 295:Core/Src/stm32f1xx_it.c **** }
 296:Core/Src/stm32f1xx_it.c **** 
 297:Core/Src/stm32f1xx_it.c **** /**
 298:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel7 global interrupt.
 299:Core/Src/stm32f1xx_it.c ****   */
 300:Core/Src/stm32f1xx_it.c **** void DMA1_Channel7_IRQHandler(void)
 301:Core/Src/stm32f1xx_it.c **** {
 368              		.loc 1 301 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 302:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel7_IRQn 0 */
 303:Core/Src/stm32f1xx_it.c **** 
 304:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel7_IRQn 0 */
 305:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_tx);
 373              		.loc 1 305 3 view .LVU37
 374 0000 0148     		ldr	r0, .L30
 375 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 376              	.LVL8:
 377              	.L31:
 378 0006 00BF     		.align	2
 379              	.L30:
 380 0008 00000000 		.word	hdma_usart2_tx
 381              		.cfi_endproc
 382              	.LFE79:
 384              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 385              		.align	1
 386              		.p2align 2,,3
 387              		.global	TIM4_IRQHandler
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 392              	TIM4_IRQHandler:
 393              	.LFB80:
 306:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel7_IRQn 1 */
 307:Core/Src/stm32f1xx_it.c **** 
 308:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel7_IRQn 1 */
 309:Core/Src/stm32f1xx_it.c **** }
 310:Core/Src/stm32f1xx_it.c **** 
 311:Core/Src/stm32f1xx_it.c **** /**
 312:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM4 global interrupt.
 313:Core/Src/stm32f1xx_it.c ****   */
 314:Core/Src/stm32f1xx_it.c **** void TIM4_IRQHandler(void)
 315:Core/Src/stm32f1xx_it.c **** {
 394              		.loc 1 315 1 view -0
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 13


 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 316:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 317:Core/Src/stm32f1xx_it.c **** 
 318:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 319:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 398              		.loc 1 319 3 view .LVU39
 315:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 399              		.loc 1 315 1 is_stmt 0 view .LVU40
 400 0000 08B5     		push	{r3, lr}
 401              	.LCFI2:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 3, -8
 404              		.cfi_offset 14, -4
 405              		.loc 1 319 3 view .LVU41
 406 0002 0348     		ldr	r0, .L34
 407 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 408              	.LVL9:
 320:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 321:Core/Src/stm32f1xx_it.c ****   HUB75D_DispScan();
 409              		.loc 1 321 3 is_stmt 1 view .LVU42
 322:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 323:Core/Src/stm32f1xx_it.c **** }
 410              		.loc 1 323 1 is_stmt 0 view .LVU43
 411 0008 BDE80840 		pop	{r3, lr}
 412              	.LCFI3:
 413              		.cfi_restore 14
 414              		.cfi_restore 3
 415              		.cfi_def_cfa_offset 0
 321:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 416              		.loc 1 321 3 view .LVU44
 417 000c FFF7FEBF 		b	HUB75D_DispScan
 418              	.LVL10:
 419              	.L35:
 420              		.align	2
 421              	.L34:
 422 0010 00000000 		.word	htim4
 423              		.cfi_endproc
 424              	.LFE80:
 426              		.section	.text.USART1_IRQHandler,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	USART1_IRQHandler
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 434              	USART1_IRQHandler:
 435              	.LFB81:
 324:Core/Src/stm32f1xx_it.c **** 
 325:Core/Src/stm32f1xx_it.c **** /**
 326:Core/Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 327:Core/Src/stm32f1xx_it.c ****   */
 328:Core/Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 329:Core/Src/stm32f1xx_it.c **** {
 436              		.loc 1 329 1 is_stmt 1 view -0
 437              		.cfi_startproc
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 14


 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 330:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 331:Core/Src/stm32f1xx_it.c **** 
 332:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 333:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 440              		.loc 1 333 3 view .LVU46
 329:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 441              		.loc 1 329 1 is_stmt 0 view .LVU47
 442 0000 10B5     		push	{r4, lr}
 443              	.LCFI4:
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 4, -8
 446              		.cfi_offset 14, -4
 447              		.loc 1 333 3 view .LVU48
 448 0002 044C     		ldr	r4, .L38
 449 0004 2046     		mov	r0, r4
 450 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 451              	.LVL11:
 334:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 335:Core/Src/stm32f1xx_it.c ****   WIFI_ReceiveIDLE(&huart1);
 452              		.loc 1 335 3 is_stmt 1 view .LVU49
 453 000a 2046     		mov	r0, r4
 336:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 337:Core/Src/stm32f1xx_it.c **** }
 454              		.loc 1 337 1 is_stmt 0 view .LVU50
 455 000c BDE81040 		pop	{r4, lr}
 456              	.LCFI5:
 457              		.cfi_restore 14
 458              		.cfi_restore 4
 459              		.cfi_def_cfa_offset 0
 335:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 460              		.loc 1 335 3 view .LVU51
 461 0010 FFF7FEBF 		b	WIFI_ReceiveIDLE
 462              	.LVL12:
 463              	.L39:
 464              		.align	2
 465              	.L38:
 466 0014 00000000 		.word	huart1
 467              		.cfi_endproc
 468              	.LFE81:
 470              		.section	.text.USART2_IRQHandler,"ax",%progbits
 471              		.align	1
 472              		.p2align 2,,3
 473              		.global	USART2_IRQHandler
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 478              	USART2_IRQHandler:
 479              	.LFB82:
 338:Core/Src/stm32f1xx_it.c **** 
 339:Core/Src/stm32f1xx_it.c **** /**
 340:Core/Src/stm32f1xx_it.c ****   * @brief This function handles USART2 global interrupt.
 341:Core/Src/stm32f1xx_it.c ****   */
 342:Core/Src/stm32f1xx_it.c **** void USART2_IRQHandler(void)
 343:Core/Src/stm32f1xx_it.c **** {
 480              		.loc 1 343 1 is_stmt 1 view -0
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 15


 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 344:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 345:Core/Src/stm32f1xx_it.c **** 
 346:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 347:Core/Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 484              		.loc 1 347 3 view .LVU53
 343:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 485              		.loc 1 343 1 is_stmt 0 view .LVU54
 486 0000 10B5     		push	{r4, lr}
 487              	.LCFI6:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 4, -8
 490              		.cfi_offset 14, -4
 491              		.loc 1 347 3 view .LVU55
 492 0002 044C     		ldr	r4, .L42
 493 0004 2046     		mov	r0, r4
 494 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 495              	.LVL13:
 348:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 349:Core/Src/stm32f1xx_it.c ****   TRACE_UART_ReceiveIDLE(&huart2);
 496              		.loc 1 349 3 is_stmt 1 view .LVU56
 497 000a 2046     		mov	r0, r4
 350:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 351:Core/Src/stm32f1xx_it.c **** }
 498              		.loc 1 351 1 is_stmt 0 view .LVU57
 499 000c BDE81040 		pop	{r4, lr}
 500              	.LCFI7:
 501              		.cfi_restore 14
 502              		.cfi_restore 4
 503              		.cfi_def_cfa_offset 0
 349:Core/Src/stm32f1xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 504              		.loc 1 349 3 view .LVU58
 505 0010 FFF7FEBF 		b	TRACE_UART_ReceiveIDLE
 506              	.LVL14:
 507              	.L43:
 508              		.align	2
 509              	.L42:
 510 0014 00000000 		.word	huart2
 511              		.cfi_endproc
 512              	.LFE82:
 514              		.text
 515              	.Letext0:
 516              		.file 2 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 517              		.file 3 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 518              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 519              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 520              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 521              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 522              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 523              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 524              		.file 10 "Core/Inc/usart.h"
 525              		.file 11 "user/trace/trace_uart_if.h"
 526              		.file 12 "user/wifi_uart_if/wifi_uart_if.h"
 527              		.file 13 "user/hub75d/hub75d.h"
 528              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 16


 529              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc_ex.h"
 530              		.file 16 "user/time/time.h"
 531              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:18     .text.NMI_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:63     .text.MemManage_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:70     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:87     .text.BusFault_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:94     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:111    .text.UsageFault_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:118    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:135    .text.SVC_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:142    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:153    .text.DebugMon_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:160    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:171    .text.PendSV_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:178    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:189    .text.SysTick_Handler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:196    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:210    .text.RTC_IRQHandler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:217    .text.RTC_IRQHandler:00000000 RTC_IRQHandler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:253    .text.RTC_IRQHandler:0000001c $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:259    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:266    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:281    .text.DMA1_Channel4_IRQHandler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:288    .text.DMA1_Channel4_IRQHandler:00000000 DMA1_Channel4_IRQHandler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:302    .text.DMA1_Channel4_IRQHandler:00000008 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:307    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:314    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:328    .text.DMA1_Channel5_IRQHandler:00000008 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:333    .text.DMA1_Channel6_IRQHandler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:340    .text.DMA1_Channel6_IRQHandler:00000000 DMA1_Channel6_IRQHandler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:354    .text.DMA1_Channel6_IRQHandler:00000008 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:359    .text.DMA1_Channel7_IRQHandler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:366    .text.DMA1_Channel7_IRQHandler:00000000 DMA1_Channel7_IRQHandler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:380    .text.DMA1_Channel7_IRQHandler:00000008 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:385    .text.TIM4_IRQHandler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:392    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:422    .text.TIM4_IRQHandler:00000010 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:427    .text.USART1_IRQHandler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:434    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:466    .text.USART1_IRQHandler:00000014 $d
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:471    .text.USART2_IRQHandler:00000000 $t
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:478    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s:510    .text.USART2_IRQHandler:00000014 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_RTCEx_RTCIRQHandler
HAL_GPIO_TogglePin
Set1sFlag
hrtc
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_usart1_tx
hdma_usart1_rx
ARM GAS  C:\Users\WENHUA~1\AppData\Local\Temp\ccmdFN28.s 			page 18


hdma_usart2_rx
hdma_usart2_tx
HAL_TIM_IRQHandler
HUB75D_DispScan
htim4
HAL_UART_IRQHandler
WIFI_ReceiveIDLE
huart1
TRACE_UART_ReceiveIDLE
huart2
